apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: kube-system
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    # all input will come from filebeat, no local logs
    input {
      beats {
        port => 5044
      }
    }
    filter {
      if [message] =~ /^\{.*\}$/ {
        json {
          source => "message"
        }
      }
      if [ClientHost] {
        geoip {
          source => "ClientHost"
        }
      }
    }
    output {
        elasticsearch {
            hosts => [ "elasticsearch-logging.monitoring:9200" ]
        }
    }
---
kind: Service
apiVersion: v1
metadata:
  name: "filebeat-logstash-headless"
  namespace: monitoring
  labels:
    app: "filebeat-logstash"
spec:
  clusterIP: None
  selector:
    app: "filebeat-logstash"
  ports:
    - name: http
      port: 9600
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: filebeat-logstash
  namespace: monitoring
  labels:
    app: "filebeat-logstash"
spec:
  serviceName: filebeat-logstash-headless
  selector:
    matchLabels:
      app: "filebeat-logstash"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "filebeat-logstash"
      labels:
        app: "filebeat-logstash"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 120
      priorityClassName: high
      containers:
      - name: "logstash"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/logstash/logstash:7.9.1"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9600
        resources:
          limits:
            cpu: 400m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 1Gi
        env:
          - name: LS_JAVA_OPTS
            value: "-Xmx1g -Xms1g"

